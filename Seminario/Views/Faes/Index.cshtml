@model Seminario.Models.Filtro

@{
    ViewBag.Title = "FAES";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (ViewBag.Mensaje != null)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <FONT color="red">@ViewBag.Mensaje</FONT>
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.MunicipioId, "Municipio", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MunicipioId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MunicipioId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Anio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Anio, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Anio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Mes, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Mes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoDelito, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.TipoDelito, "Seleccion Opcional", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoDelito, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Semana, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Semana, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Semana, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Graficar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Exportar Datos en Excel", "Export", null, new { @class = "btn btn-info" })
        </th>
    </tr>
</table>